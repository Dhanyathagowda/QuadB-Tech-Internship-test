//2.Given a sorted array of integers, implement a function that returns the index of the first occurrence of a given number.

use std::io::{self, Write};

fn find_first_occurrence(arr: &[i32], target: i32) -> Option<usize> {
    let mut low = 0;
    let mut high = arr.len() as isize - 1;
    let mut result = None;

    while low <= high {
        let mid = low + (high - low) / 2;
        if arr[mid as usize] == target {
            result = Some(mid as usize);
            high = mid - 1;
        } else if arr[mid as usize] < target {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }
    
    result
}

fn main() {
    let mut input = String::new();

    println!("Enter a sorted array of integers separated by spaces:");
    io::stdin().read_line(&mut input).expect("Failed to read line");
    let arr: Vec<i32> = input.trim().split_whitespace().map(|x| x.parse().unwrap()).collect();

    println!("Enter the target number to find:");
    input.clear();
    io::stdin().read_line(&mut input).expect("Failed to read line");
    let target: i32 = input.trim().parse().unwrap();

    if let Some(index) = find_first_occurrence(&arr, target) {
        println!("The first occurrence of {} is at index {}", target, index);
    } else {
        println!("{} not found in array", target);
    }
}
