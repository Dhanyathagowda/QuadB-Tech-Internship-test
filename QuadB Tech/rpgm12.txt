//Find the maximum subarray sum in Rust

use std::io;

fn maxarray_sum(arr: &[i32]) -> i32 {
    let mut max_ending_here = arr[0];
    let mut max_so_far = arr[0];

    for &num in arr.iter().skip(1) {
        max_ending_here = i32::max(num, max_ending_here + num);
        max_so_far = i32::max(max_so_far, max_ending_here);
    }

    max_so_far
}

fn main() {
    // Read the array elements from the user
    let mut input = String::new();

    println!("Enter the array elements separated by spaces:");
    io::stdin().read_line(&mut input).expect("Failed to read line");

    let array: Vec<i32> = input.trim().split_whitespace()
        .map(|num| num.parse().expect("Please enter valid integers"))
        .collect();

    // Calculate the maximum subarray sum
    let max_sum = maxarray_sum(&array);

    println!("Maximum subarray sum: {}", max_sum);
}
